name: Frontend Tests

on:
  push:
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit

    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint || echo "ESLint not configured, skipping"

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Test frontend build size
      working-directory: ./frontend
      run: |
        echo "Build size analysis:"
        du -sh dist/
        ls -la dist/assets/

  test-backend-python:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python syntax check
      working-directory: ./backend
      run: |
        python -m py_compile app/main.py
        python -m py_compile app/models.py
        python -m py_compile app/config.py
        python -c "from app.main import app; print('✓ FastAPI app imports successfully')"

    - name: Test chat service import
      working-directory: ./backend
      run: |
        python -c "from app.services.chat_service import get_chat_service; print('✓ Chat service imports successfully')"

    - name: Test API structure
      working-directory: ./backend
      run: |
        python -c "
        from app.main import app
        from fastapi.testclient import TestClient
        client = TestClient(app)
        
        # Test basic endpoints exist
        routes = [route.path for route in app.routes]
        expected_routes = ['/health', '/api/chat/', '/api/chat/stream', '/api/chat/suggestions']
        
        for route in expected_routes:
            if any(route in r for r in routes):
                print(f'✓ Route {route} exists')
            else:
                print(f'✗ Route {route} missing')
        "